#version: '3.1'
version: '2.2'
x-api-login-variables: &api-login-variables
  SERVER_PORT: 8083
  SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
  SPRING_DATASOURCE_USERNAME: postgres
  SPRING_DATASOURCE_PASSWORD: postgres
  SPRING_REDIS_HOST: cache
  SPRING_REDIS_PORT: 6379
  SPRING_REDIS_PASSWORD: SUASENHA
  SPRING_ENCR: xxpawt2WLOEJRPmQMfIC4dZxoDh6cRJX
  SPRING_KFPASS: dclwwylQQr8IfkmmgCRnBIgJKN9x_x9B
  SPRING_KFUSER: d83eral9
  EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://discovery:8080/eureka

x-discovery-variables: &discovery-variables
  SERVER_PORT: 8080
  EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://localhost:8080/eureka/


services:

  redis-compose:
    container_name: cache
    image: redis
    command: redis-server --requirepass SUASENHA --appendonly yes
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - /home/duducp/Redis:/var/lib/postgresql/data

  postgres:
    image: postgres:10.5
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/apilogin/data
    mem_limit: 512m

  prometheus:
    user: root
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - "./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml"
    command: "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    mem_limit: 128m

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"

  api-login:
    image: joao4018/api-login:latest
    depends_on:
      - redis-compose
      - postgres
    ports:
      - "8083:8083"
    environment:
      <<: *api-login-variables
    mem_limit: 512m

  discovery:
    container_name: discovery
    image: joao4018/discovery:latest
    ports:
      - "8080:8080"
    environment:
      <<: *discovery-variables
    mem_limit: 512m
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka-data:/var/lib/kafka/data

networks:
  kafka-network:
    driver: bridge
volumes:
  apilogin:
  cache:
    driver: local